<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jaml.Wpf</name>
    </assembly>
    <members>
        <member name="T:Jaml.Wpf.Exceptions.CommandException">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Exceptions.CommandException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Exceptions.CommandException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Exceptions.CommandException.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Exceptions.UIException">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Exceptions.UIException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Exceptions.UIException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Exceptions.UIException.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Helpers.PathsHelper">
            <summary>
            Shortcuts to help with paths
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Helpers.PathsHelper.GetUriFromRelativePath(System.String)">
            <summary>
            Create <see cref="T:System.Uri"/> from relative path string
            </summary>
            <param name="relativePath">Relative path</param>
            <returns><see cref="T:System.Uri"/> with full path</returns>
        </member>
        <member name="T:Jaml.Wpf.Helpers.UIHelper">
            <summary>
            Some common methods to help with UI
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Helpers.UIHelper.GetBrushFromImage(System.String)">
            <summary>
            Creates <see cref="T:System.Windows.Media.Brush"/> from image
            </summary>
            <param name="imagePath">Path to image</param>
            <returns><see cref="T:System.Windows.Media.Brush"/> from image</returns>
        </member>
        <member name="T:Jaml.Wpf.Models.ChildModels.ChildModel">
            <summary>
            Model of child elements
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.ChildModels.ChildModel.MediaElementModel">
            <summary>
            Media element. Can be video or audio file
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.ChildModels.ChildModel.ImageModel">
            <summary>
            Non-animated image
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.ChildModels.ChildModel.ButtonModel">
            <summary>
            Button
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.ChildModels.ChildModel.GridModel">
            <summary>
            Grid
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.ChildModels.ChildModel.GetUIElementModel">
            <summary>
            Get the current <see cref="T:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1"/>
            </summary>
            <returns>Current <see cref="T:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1"/> as object</returns>
        </member>
        <member name="M:Jaml.Wpf.Models.ChildModels.ChildModel.GetUIElementModel``1">
            <summary>
            Get the current <see cref="T:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1"/>
            </summary>
            <returns>Current <see cref="T:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1"/></returns>
        </member>
        <member name="M:Jaml.Wpf.Models.ChildModels.ChildModel.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <summary>
            Convert this child to <see cref="T:System.Windows.UIElement"/>
            </summary>
            <param name="commandProvider"></param>
            <param name="styleModels">Collection of <see cref="T:Jaml.Wpf.Models.StyleModels.StyleModel"/></param>
            <returns>Converted <see cref="T:System.Windows.UIElement"/></returns>
        </member>
        <member name="M:Jaml.Wpf.Models.ChildModels.ChildModel.ToUIElement``1(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <summary>
            Convert this child to <see cref="T:System.Windows.UIElement"/>
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.UIElement"/></typeparam>
            <param name="commandProvider"></param>
            <param name="styleModels">Collection of <see cref="T:Jaml.Wpf.Models.StyleModels.StyleModel"/></param>
            <returns>Converted <see cref="T:System.Windows.UIElement"/></returns>
        </member>
        <member name="T:Jaml.Wpf.Models.CommandModels.CommandArgModel">
            <summary>
            Model of command argument
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.CommandArgModel.Name">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.CommandArgModel.Value">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.CommandModels.CommandModel">
            <summary>
            Model of commands
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.CommandModel.EventName">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.CommandModel.Method">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.CommandModel.Args">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.CommandModels.ICommandArgModel">
            <summary>
            Base interface for command's arg model
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.ICommandArgModel.Name">
            <summary>
            Name of argument
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.ICommandArgModel.Value">
            <summary>
            Value of argument
            </summary>
        </member>
        <member name="T:Jaml.Wpf.Models.CommandModels.ICommandModel">
            <summary>
            Interface for creating your own CommandModels
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.ICommandModel.EventName">
            <summary>
            Event name
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.ICommandModel.Method">
            <summary>
            Method to call
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.CommandModels.ICommandModel.Args">
            <summary>
            Arguments, passed to the method
            </summary>
        </member>
        <member name="T:Jaml.Wpf.Models.JsonModels.IJsonModel">
            <summary>
            Base interface for all json models
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.JsonModels.IJsonModel.GetJsonModel``1(System.String)">
            <summary>
            Parses the model into chosen type from <see cref="T:Jaml.Wpf.Models.JsonModels.IJsonModel"/> children
            </summary>
            <typeparam name="T">Children of <see cref="T:Jaml.Wpf.Models.JsonModels.IJsonModel"/></typeparam>
            <param name="filePath">Path to json file to parse</param>
            <returns>Parsed model</returns>
        </member>
        <member name="T:Jaml.Wpf.Models.JsonModels.JsonModel">
            <summary>
            Base class for parsing json models
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.JsonModels.JsonModel.GetModel``1(System.String)">
            <summary>
            Parses the model into chosen type from <see cref="T:Jaml.Wpf.Models.JsonModels.IJsonModel"/> children
            </summary>
            <typeparam name="T">Children of <see cref="T:Jaml.Wpf.Models.JsonModels.IJsonModel"/></typeparam>
            <param name="filePath">Path to json file to parse</param>
            <returns>Parsed model</returns>
        </member>
        <member name="M:Jaml.Wpf.Models.JsonModels.JsonModel.GetModelAsync``1(System.String)">
            <summary>
            Asynchroniously parses the model into chosen type from <see cref="T:Jaml.Wpf.Models.JsonModels.IJsonModel"/> children
            </summary>
            <typeparam name="T">Children of <see cref="T:Jaml.Wpf.Models.JsonModels.IJsonModel"/></typeparam>
            <param name="filePath">Path to json file to parse</param>
            <returns>Parsed model</returns>
        </member>
        <member name="M:Jaml.Wpf.Models.JsonModels.JsonModel.GetJsonModel``1(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.JsonModels.MainWindowModel`1">
            <summary>
            Model of MainWindow.json
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.MainWindowModel`1.MainWindow">
            <summary>
            Json's main window element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.MainWindowModel`1.WindowModel">
            <summary>
            Window inside of MainWindow
            </summary>
        </member>
        <member name="T:Jaml.Wpf.Models.JsonModels.PageModel">
            <summary>
            Any page in application
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.PageModel.Page">
            <summary>
            Json's Page element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.PageModel.GridModel">
            <summary>
            Json's Grid element
            </summary>
        </member>
        <member name="T:Jaml.Wpf.Models.JsonModels.RootModel">
            <summary>
            Root of the application
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.RootModel.Root">
            <summary>
            Json's Root element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.RootModel.MainWindow">
            <summary>
            Path to main window json
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.RootModel.FirstPage">
            <summary>
            First loaded by Root page
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.RootModel.Styles">
            <summary>
            Json's Styles element
            </summary>
        </member>
        <member name="T:Jaml.Wpf.Models.JsonModels.StylesModel">
            <summary>
            Defines list of styles for app's controls
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.JsonModels.StylesModel.StyleModels">
            <summary>
            Collection of styles
            </summary>
        </member>
        <member name="T:Jaml.Wpf.Models.StyleModels.IStyleModel">
            <summary>
            Base interface for all style models
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.Id">
            <summary>
            Style id
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.FontSize">
            <summary>
            Font size
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.FontFamily">
            <summary>
            Font family path
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.FontStyle">
            <summary>
            Font size
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.FontWeight">
            <summary>
            Font weight
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.Foreground">
            <summary>
            Foreground Argb string
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.Background">
            <summary>
            Background of the control
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.BorderThickness">
            <summary>
            Border thickness
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.IStyleModel.Visibility">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.StyleModels.IStyleModel.ToStyle``1">
            <summary>
            Convert current model to style
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Style"/></typeparam>
            <returns>Converted style</returns>
        </member>
        <member name="T:Jaml.Wpf.Models.StyleModels.StyleModel">
            <summary>
            Basic class, that implements the <see cref="T:Jaml.Wpf.Models.StyleModels.IStyleModel" />
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.Id">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.FontSize">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.FontFamily">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.FontStyle">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.FontWeight">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.Foreground">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.Background">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.BorderThickness">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.StyleModels.StyleModel.Visibility">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.StyleModels.StyleModel.ToStyle``1">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.StyleModels.StyleModel.TryGetStyleModel(System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.StyleModels.StyleModel},System.Int32)">
            <summary>
            Get style model by id from collection
            </summary>
            <param name="styleModels"></param>
            <param name="styleId"></param>
            <returns></returns>
        </member>
        <member name="M:Jaml.Wpf.Models.StyleModels.StyleModel.TryGetStyle``1(System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.StyleModels.StyleModel},System.Int32)">
            <summary>
            Get style from stylemodel collection by id
            </summary>
            <typeparam name="T"></typeparam>
            <param name="styleModels"></param>
            <param name="styleId"></param>
            <returns></returns>
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.ButtonBaseModel`1">
            <summary>
            Base button model
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Controls.Primitives.ButtonBase"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.ButtonBaseModel`1.ClickMode">
            <summary>
            Click mode
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ButtonBaseModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ButtonBaseModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ButtonBaseModel`1.BindCommand(`0,Jaml.Wpf.Models.CommandModels.ICommandModel,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ButtonBaseModel`1.BindCommands(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.ButtonModel`1">
            <summary>
            Model of button
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Controls.Button"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.ButtonModel`1.Content">
            <summary>
            Element's content
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ButtonModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ButtonModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1">
            <summary>
            Base FrameworkElement model
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.FrameworkElement"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.StyleId">
            <summary>
            Style id to use on this element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.FocusVisualStyleId">
            <summary>
            Focus visual style id to use on this element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.FlowDirection">
            <summary>
            Flow direction (default left to right)
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.ForceCursor">
            <summary>
            Force cursor
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.HorizontalAlignment">
            <summary>
            Horizontal alignment
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.LayoutTransform">
            <summary>
            Layout transform
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.MaxHeight">
            <summary>
            Max height
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.MaxWidth">
            <summary>
            Max width
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.MinHeight">
            <summary>
            Min height
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.MinWidth">
            <summary>
            min width
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Name">
            <summary>
            Name of element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.OverridesDefaultStyle">
            <summary>
            Overrides default style
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.UseLayoutRounding">
            <summary>
            Use layout rounding
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.VerticalAlignment">
            <summary>
            Vertical alignment
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.BindingGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.ContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Cursor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.DataContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.InputScope">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Resources">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Tag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.Tooltip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.BindCommand(`0,Jaml.Wpf.Models.CommandModels.ICommandModel,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.FrameworkElementModel`1.BindCommands(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.GridModel`1">
            <summary>
            Model of Grid
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Controls.Grid"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.GridModel`1.RowDefinitions">
            <summary>
            Collection of row definitions
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.GridModel`1.ColumnDefinitions">
            <summary>
            Collection of column definitions
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.GridModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.GridModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.ImageModel`1">
            <summary>
            Image model
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Controls.Image"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.ImageModel`1.Source">
            <summary>
            Element's content
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ImageModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.ImageModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1">
            <summary>
            Base interface for all <see cref="T:System.Windows.UIElement"/> on page
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.UIElement"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.ParentRow">
            <summary>
            Row position in parent grid
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.ParentColumn">
            <summary>
            Column position in parent grid
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.RowSpan">
            <summary>
            RowSpan in parent grid
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.ColumnSpan">
            <summary>
            ColumnSpan in parent grid
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Commands">
            <summary>
            Collection of commands, associated with this element
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.AllowDrop">
            <summary>
            Allow drop
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Clip">
            <summary>
            Clip
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.ClipToBounds">
            <summary>
            Clip to bounds
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Focusable">
            <summary>
            Focusable
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.IsEnabled">
            <summary>
            Is enabled
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.IsHitTestVisible">
            <summary>
            Is hit test visible
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.IsManipulationEnabled">
            <summary>
            Is manipulation enabled
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Opacity">
            <summary>
            Opacity
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.RenderSize">
            <summary>
            Render size
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.RenderTransform">
            <summary>
            Render transform
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.RenderTransformOrigin">
            <summary>
            Render transform origin
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.SnapsToDevicePixels">
            <summary>
            Snaps to device pixels
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Uid">
            <summary>
            Uid
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Visibility">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.CacheMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.Effect">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.OpacityMask">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <summary>
            Converts this model to one of <see cref="T:System.Windows.UIElement"/>'s children
            </summary>
            <param name="commandProvider">Command provider</param>
            <param name="styleModels">Collection of <see cref="T:Jaml.Wpf.Models.StyleModels.StyleModel"/></param>
            <returns>Converted element</returns>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <summary>
            Bind this model properties to the target <see cref="T:System.Windows.UIElement"/>
            </summary>
            <param name="element">Target element</param>
            <param name="commandProvider">Command provider</param>
            <param name="styleModels">Collection of <see cref="T:Jaml.Wpf.Models.StyleModels.StyleModel"/></param>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.BindCommand(`0,Jaml.Wpf.Models.CommandModels.ICommandModel,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <summary>
            Binds command to passed element
            </summary>
            <param name="element">Target element to bind the command</param>
            <param name="commandModel">Model of command for element</param>
            <param name="commandProvider">Command provider</param>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.IUIElementModel`1.BindCommands(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <summary>
            Binds commands to passed element
            </summary>
            <param name="element">Target element to bind the command</param>
            <param name="commandProvider">Command provider</param>
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1">
            <summary>
            Model of media elements, like video or audio
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Controls.MediaElement"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.IsMuted">
            <summary>
            Is muted
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.ScrubbingEnabled">
            <summary>
            Scrubbing enabled
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.Source">
            <summary>
            Element's content
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.SpeedRatio">
            <summary>
            Speed ratio
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.Clock">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.StretchDirection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.BindCommand(`0,Jaml.Wpf.Models.CommandModels.ICommandModel,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.MediaElementModel`1.BindCommands(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.PanelModel`1">
            <summary>
            Base class for panel models
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Controls.Panel"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.PanelModel`1.Background">
            <summary>
            Panel's background
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.PanelModel`1.Children">
            <summary>
            Collection of children, bound to this panel
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.PanelModel`1.IsItemsHost">
            <summary>
            Is items host
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.PanelModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.PanelModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.UIElementModel`1">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.ParentRow">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.ParentColumn">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.RowSpan">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.ColumnSpan">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Commands">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.AllowDrop">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Clip">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.ClipToBounds">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Focusable">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.IsEnabled">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.IsHitTestVisible">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.IsManipulationEnabled">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Opacity">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.RenderSize">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.RenderTransform">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.RenderTransformOrigin">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.SnapsToDevicePixels">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Uid">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Visibility">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.CacheMode">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.Effect">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.OpacityMask">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.BindCommand(`0,Jaml.Wpf.Models.CommandModels.ICommandModel,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.UIElementModel`1.BindCommands(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider)">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Models.UIElementModels.WindowModel`1">
            <summary>
            Window model
            </summary>
            <typeparam name="T">Children of <see cref="T:System.Windows.Window"/></typeparam>
        </member>
        <member name="P:Jaml.Wpf.Models.UIElementModels.WindowModel`1.GridModel">
            <summary>
            Content of the window
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.WindowModel`1.ToUIElement(Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Models.UIElementModels.WindowModel`1.BindProperties(`0,Jaml.Wpf.Providers.CommandProviders.ICommandProvider,System.Collections.Generic.IList{Jaml.Wpf.Models.StyleModels.StyleModel})">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Parsers.PropertyParser">
            <summary>
            Contains static method to parse different <see cref="T:System.Windows.UIElement"/>'s properties
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseFontWeight(System.String)">
            <summary>
            Parse the <see cref="T:System.Windows.FontWeight"/> from string
            </summary>
            <param name="fontWeight">Font weight string</param>
            <returns>Parsed <see cref="T:System.Windows.FontWeight"/></returns>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseFontStyle(System.String)">
            <summary>
            Parse the <see cref="T:System.Windows.FontStyle"/> from string
            </summary>
            <param name="fontStyle">Font style string</param>
            <returns>Parsed <see cref="T:System.Windows.FontStyle"/></returns>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ConvertArgbToBrush(System.String)">
            <summary>
            Converts the argb string to <see cref="T:System.Windows.Media.Brush"/>
            </summary>
            <param name="argbString">argb string (e.g. 255,100,100,100)</param>
            <returns>Parsed <see cref="T:System.Windows.Media.Brush"/></returns>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseBackground(System.String)">
            <summary>
            Convert background string to brush
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseColumnDefinitions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Convert collection of strings to collection of column definitions
            </summary>
            <param name="columnDefinitions">Collection of column definition strings</param>
            <returns>collection of column definitions</returns>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseColumnDefinition(System.String)">
            <summary>
            Convert the column definition string to column definition
            </summary>
            <param name="columnDefinition">Column definition string</param>
            <returns>Column definition</returns>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseRowDefinitions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Convert collection of strings to collection of row definitions
            </summary>
            <param name="rowDefinitions">Collection of row definition strings</param>
            <returns>collection of row definitions</returns>
        </member>
        <member name="M:Jaml.Wpf.Parsers.PropertyParser.ParseRowDefinition(System.String)">
            <summary>
            Convert the row definition string to row definition
            </summary>
            <param name="rowDefinition">Row definition string</param>
            <returns>Row definition</returns>
        </member>
        <member name="T:Jaml.Wpf.Providers.CommandProviders.CommandProvider">
            <inheritdoc />
        </member>
        <member name="P:Jaml.Wpf.Providers.CommandProviders.CommandProvider.Commands">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.#ctor(System.Collections.Generic.Dictionary{System.String,System.Action{System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel}}})">
            <summary>
            Creates a new <see cref="T:Jaml.Wpf.Providers.CommandProviders.CommandProvider"/> with specified commands
            </summary>
            <param name="commands">Commands for this provider</param>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.#ctor">
            <summary>
            Creates a new <see cref="T:Jaml.Wpf.Providers.CommandProviders.CommandProvider"/> with empty dictionary of commands
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.RegisterCommands(System.Collections.Generic.Dictionary{System.String,System.Action{System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel}}})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.UnregisterCommands(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.ClearCommands">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.RegisterCommand(System.String,System.Action{System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel}})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.UnregisterCommand(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.RunCommand(System.String,System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel})">
            <inheritdoc />
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.CommandProvider.GetCommand(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Jaml.Wpf.Providers.CommandProviders.ICommandProvider">
            <summary>
            Base interface for command operations
            </summary>
        </member>
        <member name="P:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.Commands">
            <summary>
            Dictionary of commands. Key is name, and Value is action to run
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.RegisterCommands(System.Collections.Generic.Dictionary{System.String,System.Action{System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel}}})">
            <summary>
            Registers all commands from dictionary
            </summary>
            <param name="commands">Dictionary to register</param>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.UnregisterCommands(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Delete collection of commands with specified keys
            </summary>
            <param name="commandNames">Collection of keys to delete from dictionary</param>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.ClearCommands">
            <summary>
            Clears dictionary of commands
            </summary>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.RegisterCommand(System.String,System.Action{System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel}})">
            <summary>
            Registers one command
            </summary>
            <param name="commandName">Name of command</param>
            <param name="action">Action to run</param>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.UnregisterCommand(System.String)">
            <summary>
            Delete the specified command from dictionary
            </summary>
            <param name="commandName">Command name to delete</param>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.RunCommand(System.String,System.Object,System.Collections.Generic.IEnumerable{Jaml.Wpf.Models.CommandModels.ICommandArgModel})">
            <summary>
            Starts the command
            </summary>
            <param name="commandName">Name of command to start</param>
            <param name="sender">Sender of command</param>
            <param name="args">Arguments for command</param>
        </member>
        <member name="M:Jaml.Wpf.Providers.CommandProviders.ICommandProvider.GetCommand(System.String)">
            <summary>
            Gets command by name
            </summary>
            <param name="commandName">Name of command to get</param>
            <returns>Command's <see cref="T:System.Action`1"/></returns>
        </member>
    </members>
</doc>
